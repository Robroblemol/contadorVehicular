CCS PCM C Compiler, Version 4.023, 25097               27-nov.-15 20:20

               Filename: testContador.lst

               ROM used: 148 words (4%)
                         Largest free fragment is 2048
               RAM used: 21 (6%) at main() level
                         23 (6%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   046
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  28
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  MOVF   7B,W
0019:  MOVWF  27
001A:  BCF    03.7
001B:  BCF    03.5
001C:  BTFSS  0B.3
001D:  GOTO   020
001E:  BTFSC  0B.0
001F:  GOTO   033
0020:  MOVF   22,W
0021:  MOVWF  04
0022:  MOVF   23,W
0023:  MOVWF  77
0024:  MOVF   24,W
0025:  MOVWF  78
0026:  MOVF   25,W
0027:  MOVWF  79
0028:  MOVF   26,W
0029:  MOVWF  7A
002A:  MOVF   27,W
002B:  MOVWF  7B
002C:  MOVF   28,W
002D:  MOVWF  0A
002E:  SWAPF  21,W
002F:  MOVWF  03
0030:  SWAPF  7F,F
0031:  SWAPF  7F,W
0032:  RETFIE
0033:  BCF    0A.3
0034:  GOTO   035
.................... #include <testContador.h> 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES RC                    	//Resistor/Capacitor Osc with CLKOUT 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES BROWNOUT              	//Reset when brownout detected 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
....................  
.................... #use delay(clock=20000000) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A3,rcv=PIN_A2,bits=8) 
....................  
....................  
....................  
.................... int  countEnt,//Almacena la cantidad de entradas  
....................      countSal,//Almacena la cantidad de salidas    
....................      datoPuerto; //declaroo variable para almacenar lo presente en el puerto 
.................... boolean flag_ent,//indica si se realizó una entrada  
....................         flag_sal; //indica si se realizó una salida 
.................... #int_RB 
.................... RB_isr() { 
....................   datoPuerto= input_b();// leo el puerto b 
0035:  MOVLW  FF
0036:  BSF    03.5
0037:  MOVWF  06
0038:  BCF    03.5
0039:  MOVF   06,W
003A:  MOVWF  2B
....................    if(bit_test(datoPuerto,4)==1&&bit_test(datoPuerto ,5)==0) flag_ent=true; 
003B:  BTFSS  2B.4
003C:  GOTO   03F
003D:  BTFSS  2B.5
003E:  BSF    2C.0
....................    if(bit_test(datoPuerto,6)==1&&bit_test(datoPuerto,7)==0) flag_sal=true; 
003F:  BTFSS  2B.6
0040:  GOTO   043
0041:  BTFSS  2B.7
0042:  BSF    2C.1
.................... } 
....................  
....................  
....................  
0043:  BCF    0B.0
0044:  BCF    0A.3
0045:  GOTO   020
.................... void main() 
.................... { 
0046:  CLRF   04
0047:  BCF    03.7
0048:  MOVLW  1F
0049:  ANDWF  03,F
004A:  BSF    03.5
004B:  BCF    05.3
004C:  BCF    03.5
004D:  BSF    05.3
004E:  BSF    03.5
004F:  BCF    1F.4
0050:  BCF    1F.5
0051:  MOVF   1B,W
0052:  ANDLW  80
0053:  MOVWF  1B
0054:  MOVLW  07
0055:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
0056:  BCF    1F.4
0057:  BCF    1F.5
0058:  MOVF   1B,W
0059:  ANDLW  80
005A:  MOVWF  1B
....................    setup_adc(ADC_OFF); 
005B:  BCF    03.5
005C:  BCF    1F.0
....................    setup_spi(FALSE); 
005D:  BCF    14.5
005E:  BSF    03.5
005F:  BCF    06.2
0060:  BSF    06.1
0061:  BCF    06.4
0062:  MOVLW  00
0063:  BCF    03.5
0064:  MOVWF  14
0065:  BSF    03.5
0066:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0067:  MOVF   01,W
0068:  ANDLW  C7
0069:  IORLW  08
006A:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
006B:  BCF    03.5
006C:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
006D:  MOVLW  00
006E:  MOVWF  78
006F:  MOVWF  12
0070:  MOVLW  00
0071:  BSF    03.5
0072:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0073:  MOVLW  07
0074:  MOVWF  1C
0075:  MOVF   05,W
0076:  MOVLW  10
0077:  MOVWF  77
0078:  DECFSZ 77,F
0079:  GOTO   078
007A:  NOP
007B:  MOVF   1C,W
007C:  BCF    03.5
007D:  BCF    0D.6
....................    setup_vref(FALSE); 
007E:  BSF    03.5
007F:  CLRF   1D
....................    enable_interrupts(INT_RB); 
0080:  BCF    03.5
0081:  BSF    03.6
0082:  BSF    0B.3
....................    enable_interrupts(GLOBAL); 
0083:  MOVLW  C0
0084:  BCF    03.6
0085:  IORWF  0B,F
....................    setup_oscillator(False); 
0086:  BSF    03.5
0087:  CLRF   0F
0088:  MOVF   0F,W
....................  
....................   while (true){ 
....................    if(flag_ent==true&&bit_test(datoPuerto,5)==true) countEnt++; 
0089:  BCF    03.5
008A:  BTFSS  2C.0
008B:  GOTO   08E
008C:  BTFSC  2B.5
008D:  INCF   29,F
....................    if (flag_sal==true&&bit_test(datoPuerto,7)==true)countSal++; 
008E:  BTFSS  2C.1
008F:  GOTO   092
0090:  BTFSC  2B.7
0091:  INCF   2A,F
....................   } 
0092:  GOTO   08A
.................... } 
0093:  SLEEP

Configuration Fuses:
   Word  1: 3F7B   NOWDT NOPUT MCLR BROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT RC
   Word  2: 3FFF   FCMEN IESO
